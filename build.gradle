import net.fabricmc.loom.task.RunClientTask

plugins {
    id("java-library")
    id("maven")
    id("maven-publish")
    id("fabric-loom") version("0.5-SNAPSHOT")
    id("com.jfrog.bintray") version("1.8.5")
}

allprojects {
    apply(plugin: "java-library")
    apply(plugin: "maven")
    apply(plugin: "maven-publish")
    apply(plugin: "fabric-loom")
    apply(plugin: "com.jfrog.bintray")

    project.group = "user11681"

    ext.javaVersion = 8

    ext.local = {final String... name ->
        Dependency dependency = null

        dependencies {
            dependency = api(project(path: ":" + String.join(":", name), configuration: "dev"))
        }

        return dependency
    }

    ext.includeLocal = {final String... name ->
        Dependency dependency = null

        dependencies {
            dependency = include(local(name))
        }

        return dependency
    }

    ext.modInclude = {final Object... dependencyNotation ->
        Dependency dependency = null

        dependencies {
            dependency = modApi(include(dependencyNotation))
        }

        return dependency
    }

    sourceSets {
        test {
            compileClasspath += main.compileClasspath
            runtimeClasspath += main.runtimeClasspath
        }
    }

    task runTestClient(type: RunClientTask) {
        classpath(sourceSets.test.runtimeClasspath)
    }

    repositories {
        mavenLocal()

        maven {url = "https://dl.bintray.com/user11681/maven"}
        maven {url = "https://dl.bintray.com/ladysnake/libs"}
        maven {url = "https://dl.bintray.com/zundrel/wrenchable"}
        maven {url = "https://dl.bintray.com/earthcomputer/mods"}
        maven {url = "https://maven.blamejared.com"}
        maven {url = "https://maven.dblsaiko.net/"}
        maven {url = "https://maven.jamieswhiteshirt.com/libs-release"}
        maven {url = "https://mod-buildcraft.com/maven"}
        maven {url = "https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master"}
        maven {url = "https://server.bbkr.space/artifactory/libs-release"}
        maven {url = "https://jitpack.io"}
    }

    dependencies {
        minecraft("com.mojang:minecraft:${project.minecraftVersion}")
        mappings("net.fabricmc:yarn:${project.minecraftVersion}+build.${project.yarnBuild}:v2")
        modImplementation("net.fabricmc:fabric-loader:+")

        testImplementation("${project.junit}")
    }

    configurations {
        dev
    }

    loom {
        shareCaches = true
    }

    jar {
        archiveClassifier.set("dev")

        from("LICENSE")
    }

    afterEvaluate {
        tasks.withType(JavaCompile).configureEach {
            it.options.release.set(javaVersion)
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
        }
    }
}

subprojects {
    dependencies {
        testImplementation(sourceSets.main.output)
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")

        from(sourceSets.main.allSource)
    }

    bintray {
        user = System.getenv("BINTRAY_USER")
        key = System.getenv("BINTRAY_API_KEY")
        setPublications("maven")
        publish = true

        pkg {
            repo = "maven"
            name = project.name
            licenses = ["LGPL-3.0"]
            vcsUrl = "https://github.com/user11681/" + project.name + ".git"

            version {
                name = project.version
                released = new Date()
                githubRepo = "user11681/" + project.name
                issueTrackerUrl = "https://github.com/user11681/" + project.name + "/issues"
            }
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId(project.group)
                artifactId(project.name)
                version(project.version)

                artifact(remapJar) {
                    builtBy remapJar
                }

                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }
            }
        }

        repositories {
            mavenLocal()
        }
    }

    afterEvaluate {
        final String jarPath = "${project.buildDir}/libs/${project.name}-${project.version}-dev.jar"

        remapJar {
            input.set(file(jarPath))

            archiveName("${project.name}-${project.version}.jar")
        }

        artifacts {
            dev(file: file(jarPath), type: "jar", builtBy: jar)
        }

        processResources {
            inputs.property("version", project.version)

            from(sourceSets.main.resources.srcDirs) {
                include("fabric.mod.json")
                expand("version": project.version)
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude("fabric.mod.json")
            }
        }

        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
        }
    }
}

dependencies {
    afterEvaluate {
        subprojects.each {
            it = project(path: ":${it.name}", configuration: "dev");

            api(it)
            testImplementation(project("${it.name}:").sourceSets.test.output)
        }
    }
}
